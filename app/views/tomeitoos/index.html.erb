<div class="jumbotron">

  <div class="btn-group btn-group-justified pomodoro-timer-bar" role="group">
    <div class="btn-group" role="group">
      <button type="button" class="btn btn-default">Pomodoro</button>
    </div>
    <div class="btn-group" role="group">
      <button type="button" class="btn btn-default">Short break</button>
    </div>
    <div class="btn-group" role="group">
      <button type="button" class="btn btn-default">Long break</button>
    </div>
  </div>


  <div id="pomodoro-work-timer" class="pomodoro-timer-container">
    <%= min_for_displaying @pomodoro_default_settings[:pomodoro_time] %>
  </div>

  <div class="text-center">
    <%= link_to "Start",
                pomodoros_path,
                class: "btn btn-success",
                :method => :post,
                remote: true,
                id: "start-pomodoro-timer" %>
    <button class="btn btn-warning", id="pause-pomodoro-timer">Pause</button>
    <button class="btn btn-warning is-hidden" id="resume-pomodoro-timer">Resume</button>
    <%= link_to "Reset",
                "",
                :method => :delete,
                remote: true,
                class: "btn btn-danger",
                id: "destroy-pomodoro-timer" %>
  </div>
</div>
<div class="hidden-container">
  <%= link_to "",
              "",
              :method => :patch,
              remote: true,
              class: "btn btn-danger is-hidden",
              id: "finish-pomodoro-timer" %>
</div>



<script>

var is_started = false;
var is_paused = false;

$("#start-pomodoro-timer").on("click", function() {
  is_started = true;
  start_pomodoro_timer();
});

$("#pause-pomodoro-timer").on("click", function() {
  pausePomodoroTimer();
})

$("#resume-pomodoro-timer").on("click", function() {
  resumePomodoroTimer();
})

$("#destroy-pomodoro-timer").on("click", function() {
  destroyPomodoroTimer();
})

function start_pomodoro_timer() {
  $('#pomodoro-work-timer').timer({
      countdown: true,
      // duration: "10s",
      duration: "<%= min_for_timer @pomodoro_default_settings[:pomodoro_time] %>",
      callback: function() {
        updatePomodoroTimer();
      }
  });
  $("#start-pomodoro-timer").addClass("is-hidden");
}

function pausePomodoroTimer() {
  is_paused = true;
  $("#pomodoro-work-timer").timer("pause");
  if (is_paused) {
    $("#pause-pomodoro-timer").addClass("is-hidden");
    $("#resume-pomodoro-timer").removeClass("is-hidden");
  }
}

function resumePomodoroTimer() {
  is_paused = false;
  $("#pomodoro-work-timer").timer("resume");
  $("#pause-pomodoro-timer").removeClass("is-hidden");
  $("#resume-pomodoro-timer").addClass("is-hidden");
}

function destroyPomodoroTimer() {
  $('#pomodoro-work-timer').timer('remove');
  is_started = false;
  is_paused = false;
  $("#pause-pomodoro-timer").removeClass("is-hidden");
  $("#start-pomodoro-timer").removeClass("is-hidden");
  $("#resume-pomodoro-timer").addClass("is-hidden");
  location.reload();
}

function updatePomodoroTimer() {
  $("#finish-pomodoro-timer")[0].click();
  location.reload();
}

function updateTimerStatus() {
  // wip
}



</script>
