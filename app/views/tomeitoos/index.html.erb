<div class="jumbotron">

  <%= render "timer_nav" %>

  <div id="pomodoro-container">
    <div id="pomodoro-work-timer" class="pomodoro-timer-container">
      <%= min_for_displaying @pomodoro_default_settings[:pomodoro_time] %>
    </div>
    <div class="text-center">
      <%= link_to "Start",
                  pomodoros_path,
                  class: "btn btn-success",
                  :method => :post,
                  remote: true,
                  id: "start-pomodoro-timer" %>
      <button class="btn btn-warning", id="pause-pomodoro-timer" disabled="disabled">Pause</button>
      <button class="btn btn-warning is-hidden" id="resume-pomodoro-timer">Resume</button>
      <%= link_to "Reset",
                  "",
                  :method => :delete,
                  remote: true,
                  class: "btn btn-danger",
                  id: "destroy-pomodoro-timer",
                  disabled: "disabled" %>
    </div>
    <div class="hidden-container">
      <%= link_to "",
                  "",
                  :method => :patch,
                  remote: true,
                  class: "btn btn-danger is-hidden",
                  id: "finish-pomodoro-timer" %>
    </div>
  </div><!-- pomodoro-container end -->

  <div id="short-break-container" class="is-hidden">
    <div id="short-break-timer" class="pomodoro-timer-container">
      <%= min_for_displaying @pomodoro_default_settings[:short_break] %>
    </div>
    <div class="text-center">
      <button class="btn btn-success start-pomodoro-break-timer"
              data-min="<%= min_for_timer @pomodoro_default_settings[:short_break] %>"
              data-type="short"
              id="start-pomodoro-short-break-timer">
              Start
      </button>
      <button class="btn btn-warning" id="pause-pomodoro-short-break-timer" disabled="disabled">Pause</button>
      <button class="btn btn-warning is-hidden" id="resume-pomodoro-short-break-timer">Resume</button>
      <button class="btn btn-danger" id="destroy-pomodoro-short-break-timer" disabled="disabled">Reset</button>
    </div>
  </div><!-- short-break-container end -->

  <div id="long-break-container" class="is-hidden">
    <div id="long-break-timer" class="pomodoro-timer-container">
      <%= min_for_displaying @pomodoro_default_settings[:long_break] %>
    </div>
    <div class="text-center">
      <button class="btn btn-success start-pomodoro-break-timer"
              data-min="<%= min_for_timer @pomodoro_default_settings[:long_break] %>"
              data-type="long"
              id="start-pomodoro-long-break-timer">
              Start
      </button>
      <button class="btn btn-warning" id="pause-pomodoro-long-break-timer" disabled="disabled">Pause</button>
      <button class="btn btn-warning is-hidden" id="resume-pomodoro-long-break-timer">Resume</button>
      <button class="btn btn-danger" id="destroy-pomodoro-long-break-timer" disabled="disabled">Reset</button>
    </div>
  </div><!-- long-break-container end -->



</div><!-- jumbotron end -->


<script>

var is_started = false;
var is_paused = false;

// pomodoro timer actions
$("#start-pomodoro-timer").on("click", function() {
  is_started = true;
  startPomodoroTimer();
});

$("#pause-pomodoro-timer").on("click", function() {
  pausePomodoroTimer();
});

$("#resume-pomodoro-timer").on("click", function() {
  resumePomodoroTimer();
});

$("#destroy-pomodoro-timer").on("click", function() {
  destroyPomodoroTimer();
});

function startPomodoroTimer() {
  $('#pomodoro-work-timer').timer({
      countdown: true,
      // duration: "<%= min_for_timer @pomodoro_default_settings[:pomodoro_time] %>",
      duration: "10s",
      callback: function() {
        updatePomodoroTimer();
      }
  });
  $("#start-pomodoro-timer").addClass("is-hidden");
  $("#pause-pomodoro-timer").attr("disabled", false);
  $("#destroy-pomodoro-timer").attr("disabled", false);
}

function pausePomodoroTimer() {
  is_paused = true;
  $("#pomodoro-work-timer").timer("pause");
  if (is_paused) {
    $("#pause-pomodoro-timer").addClass("is-hidden");
    $("#resume-pomodoro-timer").removeClass("is-hidden");
  }
}

function resumePomodoroTimer() {
  is_paused = false;
  $("#pomodoro-work-timer").timer("resume");
  $("#pause-pomodoro-timer").removeClass("is-hidden");
  $("#resume-pomodoro-timer").addClass("is-hidden");
}

function destroyPomodoroTimer() {
  location.reload();
}

function updatePomodoroTimer() {
  $("#finish-pomodoro-timer")[0].click();
  location.reload();
}


// short break
$("#start-pomodoro-short-break-timer").on("click", function() {
  $('#short-break-timer').timer({
      countdown: true,
      duration: "<%= min_for_timer @pomodoro_default_settings[:short_break] %>",
      callback: function() {

      }
  });
  $("#start-pomodoro-short-break-timer").addClass("is-hidden");
  $("#pause-pomodoro-short-break-timer").attr("disabled", false);
  $("#destroy-pomodoro-short-break-timer").attr("disabled", false);
});

$("#pause-pomodoro-short-break-timer").on("click", function() {
  $("#short-break-timer").timer("pause");
  $("#pause-pomodoro-short-break-timer").addClass("is-hidden");
  $("#resume-pomodoro-short-break-timer").removeClass("is-hidden");
});

$("#resume-pomodoro-short-break-timer").on("click", function() {
  $("#short-break-timer").timer("resume");
  $("#pause-pomodoro-short-break-timer").removeClass("is-hidden");
  $("#resume-pomodoro-short-break-timer").addClass("is-hidden");
});

$("#destroy-pomodoro-short-break-timer").on("click", function() {
  destroyPomodoroShortbreakTimer();
});

function destroyPomodoroShortbreakTimer() {
  $("#short-break-timer").timer("remove");
  $("#start-pomodoro-short-break-timer").removeClass("is-hidden");
  $("#pause-pomodoro-short-break-timer").removeClass("is-hidden");
  $("#pause-pomodoro-short-break-timer").attr("disabled", true);
  $("#resume-pomodoro-short-break-timer").addClass("is-hidden");
  $("#destroy-pomodoro-short-break-timer").attr("disabled", true);
  $("#short-break-timer").text("<%= min_for_displaying @pomodoro_default_settings[:short_break] %>");
}


// long break
$("#start-pomodoro-long-break-timer").on("click", function() {
  $('#long-break-timer').timer({
      countdown: true,
      duration: "<%= min_for_timer @pomodoro_default_settings[:long_break] %>",
      callback: function() {

      }
  });
  $("#start-pomodoro-long-break-timer").addClass("is-hidden");
  $("#pause-pomodoro-long-break-timer").attr("disabled", false);
  $("#destroy-pomodoro-long-break-timer").attr("disabled", false);
});

$("#pause-pomodoro-long-break-timer").on("click", function() {
  $("#long-break-timer").timer("pause");
  $("#pause-pomodoro-long-break-timer").addClass("is-hidden");
  $("#resume-pomodoro-long-break-timer").removeClass("is-hidden");
});

$("#resume-pomodoro-long-break-timer").on("click", function() {
  $("#long-break-timer").timer("resume");
  $("#pause-pomodoro-long-break-timer").removeClass("is-hidden");
  $("#resume-pomodoro-long-break-timer").addClass("is-hidden");
});

$("#destroy-pomodoro-long-break-timer").on("click", function() {
  destroyPomodoroLongbreakTimer();
});

function destroyPomodoroLongbreakTimer() {
  $("#long-break-timer").timer("remove");
  $("#start-pomodoro-long-break-timer").removeClass("is-hidden");
  $("#pause-pomodoro-long-break-timer").removeClass("is-hidden");
  $("#pause-pomodoro-long-break-timer").attr("disabled", true);
  $("#resume-pomodoro-long-break-timer").addClass("is-hidden");
  $("#destroy-pomodoro-long-break-timer").attr("disabled", true);
  $("#long-break-timer").text("<%= min_for_displaying @pomodoro_default_settings[:long_break] %>");
}



// short-break-link pomodoro-timer-bar
$("#short-break-link").on("click", function() {
  $("#pomodoro-container").addClass("is-hidden");
  $("#long-break-container").addClass("is-hidden");
  $("#short-break-container").removeClass("is-hidden");

  $("#pomodoro-link").removeClass("active");
  $("#long-break-link").removeClass("active");
  $("#short-break-link").addClass("active");

  // reset pomodoro timer and also break timer
  destroyPomodoroLongbreakTimer();
});

// long-break-link pomodoro-timer-bar
$("#long-break-link").on("click", function() {
  $("#pomodoro-container").addClass("is-hidden");
  $("#short-break-container").addClass("is-hidden");
  $("#long-break-container").removeClass("is-hidden");

  $("#pomodoro-link").removeClass("active");
  $("#long-break-link").addClass("active");
  $("#short-break-link").removeClass("active");

  // reset pomodoro timer and also break timer
  destroyPomodoroShortbreakTimer();
});


</script>
