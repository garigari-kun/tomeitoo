<div class="jumbotron">

  <div class="btn-group btn-group-justified pomodoro-timer-bar" role="group">
    <div class="btn-group" role="group">
      <button type="button" class="btn btn-default active" id="pomodoro-link">Pomodoro</button>
    </div>
    <div class="btn-group" role="group">
      <button type="button" class="btn btn-default" id="short-break-link">Short break</button>
    </div>
    <div class="btn-group" role="group">
      <button type="button" class="btn btn-default" id="long-break-link">Long break</button>
    </div>
  </div>


<div id="pomodoro-container">
  <div id="pomodoro-work-timer" class="pomodoro-timer-container">
    <%= min_for_displaying @pomodoro_default_settings[:pomodoro_time] %>
  </div>

  <div class="text-center">
    <%= link_to "Start",
                pomodoros_path,
                class: "btn btn-success",
                :method => :post,
                remote: true,
                id: "start-pomodoro-timer" %>
    <button class="btn btn-warning", id="pause-pomodoro-timer" disabled="disabled">Pause</button>
    <button class="btn btn-warning is-hidden" id="resume-pomodoro-timer">Resume</button>
    <%= link_to "Reset",
                "",
                :method => :delete,
                remote: true,
                class: "btn btn-danger",
                id: "destroy-pomodoro-timer",
                disabled: "disabled" %>
  </div>
  <div class="hidden-container">
    <%= link_to "",
                "",
                :method => :patch,
                remote: true,
                class: "btn btn-danger is-hidden",
                id: "finish-pomodoro-timer" %>
  </div>
</div><!-- pomodoro-container end -->

<div id="short-break-container" class="is-hidden">
  <div id="short-break-timer" class="pomodoro-timer-container">
    <%= min_for_displaying @pomodoro_default_settings[:short_break] %>
  </div>
  <div class="text-center">
    <button class="btn btn-success start-pomodoro-break-timer"
            data-min="<%= min_for_timer @pomodoro_default_settings[:short_break] %>"
            data-type="short"
            id="start-pomodoro-short-break-timer">
            Start
    </button>
    <button class="btn btn-warning pause-pomodoro-break-timer" id="pause-pomodoro-short-break-timer" data-type="short" disabled="disabled">Pause</button>
    <button class="btn btn-warning is-hidden resume-pomodoro-break-timer" id="resume-pomodoro-short-break-timer" data-type="short">Resume</button>
    <button class="btn btn-danger destroy-pomodoro-break-timer" id="destroy-pomodoro-short-break-timer" data-type="short" disabled="disabled">Reset</button>
  </div>
</div><!-- short-break-container end -->


<div id="long-break-container" class="is-hidden">
  <div id="long-break-timer" class="pomodoro-timer-container">
    <%= min_for_displaying @pomodoro_default_settings[:long_break] %>
  </div>
  <div class="text-center">
    <button class="btn btn-success start-pomodoro-break-timer"
            data-min="<%= min_for_timer @pomodoro_default_settings[:long_break] %>"
            data-type="long"
            id="start-pomodoro-long-break-timer">
            Start
    </button>
    <button class="btn btn-warning pause-pomodoro-break-timer" id="pause-pomodoro-long-break-timer" data-type="long" disabled="disabled">Pause</button>
    <button class="btn btn-warning is-hidden resume-pomodoro-break-timer" id="resume-pomodoro-long-break-timer" data-type="long">Resume</button>
    <button class="btn btn-danger destroy-pomodoro-break-timer" data-type="long" id="destroy-pomodoro-long-break-timer" disabled="disabled">Reset</button>
  </div>
</div><!-- long-break-container end -->


</div><!-- jumbotron end -->




<script>

var is_started = false;
var is_paused = false;

var break_started = false;
var break_paused = false;

// pomodoro timer actions
$("#start-pomodoro-timer").on("click", function() {
  is_started = true;
  start_pomodoro_timer();
});

$("#pause-pomodoro-timer").on("click", function() {
  pausePomodoroTimer();
});

$("#resume-pomodoro-timer").on("click", function() {
  resumePomodoroTimer();
});

$("#destroy-pomodoro-timer").on("click", function() {
  destroyPomodoroTimer();
});


function start_pomodoro_timer() {
  $('#pomodoro-work-timer').timer({
      countdown: true,
      duration: "<%= min_for_timer @pomodoro_default_settings[:pomodoro_time] %>",
      callback: function() {
        updatePomodoroTimer();
      }
  });
  $("#start-pomodoro-timer").addClass("is-hidden");
  $("#pause-pomodoro-timer").attr("disabled", false);
  $("#destroy-pomodoro-timer").attr("disabled", false);
}

function pausePomodoroTimer() {
  is_paused = true;
  $("#pomodoro-work-timer").timer("pause");
  if (is_paused) {
    $("#pause-pomodoro-timer").addClass("is-hidden");
    $("#resume-pomodoro-timer").removeClass("is-hidden");
  }
}

function resumePomodoroTimer() {
  is_paused = false;
  $("#pomodoro-work-timer").timer("resume");
  $("#pause-pomodoro-timer").removeClass("is-hidden");
  $("#resume-pomodoro-timer").addClass("is-hidden");
}

function destroyPomodoroTimer() {
  $('#pomodoro-work-timer').timer('remove');
  is_started = false;
  is_paused = false;
  $("#pause-pomodoro-timer").removeClass("is-hidden");
  $("#start-pomodoro-timer").removeClass("is-hidden");
  $("#resume-pomodoro-timer").addClass("is-hidden");
  location.reload();
}

function updatePomodoroTimer() {
  $("#finish-pomodoro-timer")[0].click();
  location.reload();
}




// pomodoro break timer actions
$(".start-pomodoro-break-timer").on("click", function() {
  break_started = true;
  var min = $(this).attr("data-min");
  var type = $(this).attr("data-type");
  start_pomodoro_break_timer(min, type);
});

function start_pomodoro_break_timer(min, type) {
  var break_timer_id = "#".concat(type, "-break-timer");
  $(break_timer_id).timer({
      countdown: true,
      duration: min,
      callback: function() {
        // updatePomodoroTimer();
      }
  });
  $("#start-pomodoro-".concat(type, "-break-timer")).addClass("is-hidden");
  $("#pause-pomodoro-".concat(type, "-break-timer")).attr("disabled", false);
  $("#destroy-pomodoro-".concat(type, "-break-timer")).attr("disabled", false);
}








// pomodoro-link pomodoro-timer-bar
$("#pomodoro-link").on("click", function() {
  $("#long-break-container").addClass("is-hidden");
  $("#short-break-container").addClass("is-hidden");
  $("#pomodoro-container").removeClass("is-hidden");

  $("#pomodoro-link").addClass("active");
  $("#long-break-link").removeClass("active");
  $("#short-break-link").removeClass("active");

  // reset break timer

});

// short-break-link pomodoro-timer-bar
$("#short-break-link").on("click", function() {
  $("#pomodoro-container").addClass("is-hidden");
  $("#long-break-container").addClass("is-hidden");
  $("#short-break-container").removeClass("is-hidden");

  $("#pomodoro-link").removeClass("active");
  $("#long-break-link").removeClass("active");
  $("#short-break-link").addClass("active");

  // reset pomodoro timer and also break timer

});

// long-break-link pomodoro-timer-bar
$("#long-break-link").on("click", function() {
  $("#pomodoro-container").addClass("is-hidden");
  $("#short-break-container").addClass("is-hidden");
  $("#long-break-container").removeClass("is-hidden");

  $("#pomodoro-link").removeClass("active");
  $("#long-break-link").addClass("active");
  $("#short-break-link").removeClass("active");

  // reset pomodoro timer and also break timer

});


</script>
